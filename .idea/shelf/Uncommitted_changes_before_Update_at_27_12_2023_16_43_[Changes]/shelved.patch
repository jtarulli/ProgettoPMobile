Index: app/src/main/java/com/example/progettopm/fragments/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.progettopm.fragments\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport com.example.progettopm.R\r\n\r\nclass HomeFragment : Fragment(R.layout.fragment_home) {\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_home, container, false)\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/progettopm/fragments/HomeFragment.kt b/app/src/main/java/com/example/progettopm/fragments/HomeFragment.kt
--- a/app/src/main/java/com/example/progettopm/fragments/HomeFragment.kt	(revision da5eeb6a5de8441c3d66babf7c73b2c820c3ee37)
+++ b/app/src/main/java/com/example/progettopm/fragments/HomeFragment.kt	(date 1703264072240)
@@ -5,15 +5,29 @@
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Button
 import com.example.progettopm.R
+import androidx.navigation.fragment.findNavController
 
-class HomeFragment : Fragment(R.layout.fragment_home) {
+class HomeFragment : Fragment() {
+    // Al momento della creazione del fragment
     override fun onCreateView(
         inflater: LayoutInflater, container: ViewGroup?,
         savedInstanceState: Bundle?
     ): View? {
-        // Inflate the layout for this fragment
-        return inflater.inflate(R.layout.fragment_home, container, false)
+        // Infla il layout per questo fragment
+        val view = inflater.inflate(R.layout.fragment_home, container, false)
+
+        // Trova il bottone nel layout
+        val inserisciFormazioneButton: Button = view.findViewById(R.id.inserisciFormazione_btn)
+        val navController = findNavController()
+        inserisciFormazioneButton.setOnClickListener {
+            // Naviga verso il FormazioneFragment
+            findNavController().navigate(R.id.formazioneFragment)
+        }
+
+        // Restituisci la vista
+        return view
     }
 
 
Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_width=\"match_parent\">\r\n\r\n    <Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_centerInParent=\"true\"\r\n        android:text=\"HOMEPAGE\"\r\n        android:textSize=\"30dp\"\r\n        android:textStyle=\"bold\"></Button>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
--- a/app/src/main/res/layout/fragment_home.xml	(revision da5eeb6a5de8441c3d66babf7c73b2c820c3ee37)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1703260711699)
@@ -4,10 +4,11 @@
     android:layout_width="match_parent">
 
     <Button
+        android:id="@+id/inserisciFormazione_btn"
         android:layout_width="wrap_content"
         android:layout_height="wrap_content"
         android:layout_centerInParent="true"
-        android:text="HOMEPAGE"
+        android:text="Inserisci formazione"
         android:textSize="30dp"
         android:textStyle="bold"></Button>
 
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'com.google.gms.google-services'\r\n    id 'com.google.firebase.crashlytics'\r\n}\r\n\r\nandroid {\r\n    compileSdk 34\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.progettopm\"\r\n        minSdkVersion 31\r\n        targetSdkVersion 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n        namespace \"com.example.progettopm\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.6.1'\r\n    implementation 'com.google.android.material:material:1.9.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'com.google.firebase:firebase-auth-ktx:22.3.0'\r\n    implementation 'com.google.firebase:firebase-database:20.3.0'\r\n    implementation 'com.google.firebase:firebase-firestore:24.10.0'\r\n    implementation 'com.google.firebase:firebase-storage-ktx:20.3.0'\r\n    implementation 'com.google.firebase:firebase-crashlytics:18.6.0'\r\n    implementation 'com.google.firebase:firebase-analytics:21.5.0'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.5'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'\r\n    implementation 'com.firebaseui:firebase-ui-firestore:8.0.0'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision da5eeb6a5de8441c3d66babf7c73b2c820c3ee37)
+++ b/app/build.gradle	(date 1703264013580)
@@ -37,6 +37,7 @@
     buildFeatures {
         viewBinding true
     }
+
 }
 
 dependencies {
@@ -50,9 +51,15 @@
     implementation 'com.google.firebase:firebase-storage-ktx:20.3.0'
     implementation 'com.google.firebase:firebase-crashlytics:18.6.0'
     implementation 'com.google.firebase:firebase-analytics:21.5.0'
+    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'androidx.recyclerview:recyclerview:1.3.2'
     testImplementation 'junit:junit:4.13.2'
     androidTestImplementation 'androidx.test.ext:junit:1.1.5'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
     implementation 'com.firebaseui:firebase-ui-firestore:8.0.0'
+    // Dipendenze per le Navigation Architecture Components
+    def nav_version = "2.3.5"
+    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
+    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
 
 }
\ No newline at end of file
Index: app/src/main/res/layout/fragment_formazione.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_formazione.xml b/app/src/main/res/layout/fragment_formazione.xml
new file mode 100644
--- /dev/null	(date 1703264119757)
+++ b/app/src/main/res/layout/fragment_formazione.xml	(date 1703264119757)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/formazioneFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".fragments.FormazioneFragment">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="@string/hello_blank_fragment" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/progettopm/fragments/FormazioneFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/progettopm/fragments/FormazioneFragment.kt b/app/src/main/java/com/example/progettopm/fragments/FormazioneFragment.kt
new file mode 100644
--- /dev/null	(date 1703260534955)
+++ b/app/src/main/java/com/example/progettopm/fragments/FormazioneFragment.kt	(date 1703260534955)
@@ -0,0 +1,60 @@
+package com.example.progettopm.fragments
+
+import android.os.Bundle
+import androidx.fragment.app.Fragment
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import com.example.progettopm.R
+
+// TODO: Rename parameter arguments, choose names that match
+// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+private const val ARG_PARAM1 = "param1"
+private const val ARG_PARAM2 = "param2"
+
+/**
+ * A simple [Fragment] subclass.
+ * Use the [FormazioneFragment.newInstance] factory method to
+ * create an instance of this fragment.
+ */
+class FormazioneFragment : Fragment() {
+    // TODO: Rename and change types of parameters
+    private var param1: String? = null
+    private var param2: String? = null
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        super.onCreate(savedInstanceState)
+        arguments?.let {
+            param1 = it.getString(ARG_PARAM1)
+            param2 = it.getString(ARG_PARAM2)
+        }
+    }
+
+    override fun onCreateView(
+        inflater: LayoutInflater, container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View? {
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_formazione, container, false)
+    }
+
+    companion object {
+        /**
+         * Use this factory method to create a new instance of
+         * this fragment using the provided parameters.
+         *
+         * @param param1 Parameter 1.
+         * @param param2 Parameter 2.
+         * @return A new instance of fragment FormazioneFragment.
+         */
+        // TODO: Rename and change types and number of parameters
+        @JvmStatic
+        fun newInstance(param1: String, param2: String) =
+            FormazioneFragment().apply {
+                arguments = Bundle().apply {
+                    putString(ARG_PARAM1, param1)
+                    putString(ARG_PARAM2, param2)
+                }
+            }
+    }
+}
\ No newline at end of file
